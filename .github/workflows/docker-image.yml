name: Build and Push Docker Image

on:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Use Node.js version from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: vontainment/v-serpbear
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=dev,enable=${{ github.ref == 'refs/heads/dev' }}
            type=sha,priority=100

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ github.ref_name }}
          cache-to: type=gha,scope=${{ github.ref_name }},mode=min

  cleanup-caches:
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate GH CLI
        run: gh auth setup-git
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Install gh-actions-cache extension
        run: gh extension install actions/gh-actions-cache
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: List and delete all caches
        run: |
          echo "Fetching cache keys..."
          gh actions-cache list -R ${{ github.repository }} --limit 100 | cut -f 1 | while read key; do
            if [ -n "$key" ]; then
              echo "Deleting cache: $key"
              gh actions-cache delete "$key" -R ${{ github.repository }} --confirm || true
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
